bash_comm <- paste("ls", path2, sep =" ")
sample_vec <- system(bash_comm, intern=T)
samplenames <- c(samplenames, sample_vec)
print(samplenames)
}
pch <- c(rep(1, times=8), rep(2, times=37), rep(3, times =59))
metadata <- read.csv(file= "/project/CRUP_scores/CRUP_scores/summary.tsv", header= T, sep= "\t")
levels(metadata$Lab)
labs <- c()
for (sample in samplenames){
labs <- c(labs, metadata[which(metadata$Name.of.sample== sample), 4])
print(metadata[which(metadata$Name.of.sample== sample), 4])
}
print(samplenames)
levels(labs)
dir <- "/project/CRUP_scores/Scripts/CA_tables/"
print(labs)
path_res <- "/home/lopez_s/Plots/"
filetable <- paste(dir,tables_vec, sep ="")
dat <- read.table(filetable,header= T, sep="\t", row.names= 100)
dat <- dat[rowSums(dat[])>0,]
data <- as.data.frame(t(dat))
rownames(data)
pca <- prcomp(data)
#fileplot <- paste(path_res, table,"_PCA_plot_bylab.png", sep ="")
data$lab <- as.factor(labs)
data$type <- as.factor(pch)
# png(file = fileplot)
# p<- ggfortify:::autoplot.prcomp(pca,data= data, label= T, colour= 'lab', shape= 'type')
# print(p)
# dev.off()
# t <- list(
#   family = "sans serif",
#   size = 11,
#   color = toRGB("grey50"))
# fig <- plot_ly(x=pca$x[,1], y=pca$x[,2], z=pca$x[,3], text=rownames(data))
# fig <- fig %>% add_markers(color=data$lab)
# fig <- fig %>% add_text(textfont = t, textposition = "top right")
# fig
# orca(fig, "PCA_3d-all.jpeg")
plotPCA(pca$x[,1:3],5)
png("/home/lopez_s/Plots/Pca_all.png")
fig <-scatter3D(x=pca$x[,1], y=pca$x[,2], z=pca$x[,3],bty = "g", pch = 18,
pch = 19)
text3D(x=pca$x[,1], y=pca$x[,2], z=pca$x[,3], labels = rownames(data),cex= 0.6, add = T)
dev.off()
library(PCAtools)
library(ggfortify)
library(plot3D)
library(plotly)
library(orca)
library(processx)
library(DESeq2)
dir <- "/project/CRUP_scores/Scripts/CA_tables/"
# path <- "/home/lopez_s/Plots/"
bash_comm <- paste("ls", dir, sep =" ")
tables_vec <- "tableCAfinal.txt"
print(nrow(tables_vec))
# #tables_vec <- "tableCA_clusteredchr13_tissues.txt"
# for (table in tables_vec){
#   filetable <- paste(dir,table, sep ="")
#   print(filetable)
#   dat <- read.table(filetable,header= T, sep="\t", row.names= 1)
#   dat <- dat[rowSums(dat[])>0,]
#   data <- t(dat)
#   try(pca <- prcomp(data))
#   fileplot <- paste(path, table,"_PCA_plot.png", sep ="")
#   print(fileplot)
#   png(file = fileplot)
#   p <- ggfortify:::autoplot.prcomp(pca, data = data, label = T)
#   print(p)
#   dev.off()
# }
#
#paint lab
run_type <- c("Single_ended/Primary_cells","Pair_ended/Primary_cells","Single_ended/Cell_lines","Pair_ended/Cell_lines", "Single_ended/Tissues")
dir2 <- "/project/CRUP_scores/CRUP_scores/RESULTS"
file_name <- "1_ENHANCER_PREDICTIONS/singleEnh.bedGraph"
samplenames <-c()
for (run in run_type){
path2 <- paste(dir2,run, sep="/")
bash_comm <- paste("ls", path2, sep =" ")
sample_vec <- system(bash_comm, intern=T)
samplenames <- c(samplenames, sample_vec)
print(samplenames)
}
pch <- c(rep(1, times=8), rep(2, times=37), rep(3, times =59))
metadata <- read.csv(file= "/project/CRUP_scores/CRUP_scores/summary.tsv", header= T, sep= "\t")
levels(metadata$Lab)
labs <- c()
for (sample in samplenames){
labs <- c(labs, metadata[which(metadata$Name.of.sample== sample), 4])
print(metadata[which(metadata$Name.of.sample== sample), 4])
}
print(samplenames)
levels(labs)
dir <- "/project/CRUP_scores/Scripts/CA_tables/"
print(labs)
path_res <- "/home/lopez_s/Plots/"
filetable <- paste(dir,tables_vec, sep ="")
dat <- read.table(filetable,header= T, sep="\t", row.names= 1, nrows=100)
dat <- dat[rowSums(dat[])>0,]
data <- as.data.frame(t(dat))
rownames(data)
pca <- prcomp(data)
#fileplot <- paste(path_res, table,"_PCA_plot_bylab.png", sep ="")
data$lab <- as.factor(labs)
data$type <- as.factor(pch)
# png(file = fileplot)
# p<- ggfortify:::autoplot.prcomp(pca,data= data, label= T, colour= 'lab', shape= 'type')
# print(p)
# dev.off()
# t <- list(
#   family = "sans serif",
#   size = 11,
#   color = toRGB("grey50"))
# fig <- plot_ly(x=pca$x[,1], y=pca$x[,2], z=pca$x[,3], text=rownames(data))
# fig <- fig %>% add_markers(color=data$lab)
# fig <- fig %>% add_text(textfont = t, textposition = "top right")
# fig
# orca(fig, "PCA_3d-all.jpeg")
plotPCA(pca$x[,1:3],5)
is.matrix(pca)
# t <- list(
#   family = "sans serif",
#   size = 11,
#   color = toRGB("grey50"))
# fig <- plot_ly(x=pca$x[,1], y=pca$x[,2], z=pca$x[,3], text=rownames(data))
# fig <- fig %>% add_markers(color=data$lab)
# fig <- fig %>% add_text(textfont = t, textposition = "top right")
# fig
# orca(fig, "PCA_3d-all.jpeg")
plotPCA(pca$x[,1:3])
# t <- list(
#   family = "sans serif",
#   size = 11,
#   color = toRGB("grey50"))
# fig <- plot_ly(x=pca$x[,1], y=pca$x[,2], z=pca$x[,3], text=rownames(data))
# fig <- fig %>% add_markers(color=data$lab)
# fig <- fig %>% add_text(textfont = t, textposition = "top right")
# fig
# orca(fig, "PCA_3d-all.jpeg")
plotPCA(DESeqTransform(pca$x[,1:3]))
### CA analysis on all of the chromosomes
library("FactoMineR")
library("factoextra")
### CA analysis on all of the chromosomes
install.packages(c("FactoMineR", "factoextra"))
filetable <- "/project/CRUP_scores/Scripts/CA_tables/tableCAfinal.txt"
data <- read.table(filetable,header= T, sep="\t", row.names= 1, nrows=100)
res.ca <- CA(data, graph = FALSE)
library("FactoMineR")
library("factoextra")
filetable <- "/project/CRUP_scores/Scripts/CA_tables/tableCAfinal.txt"
data <- read.table(filetable,header= T, sep="\t", row.names= 1, nrows=100)
res.ca <- CA(data, graph = FALSE)
chisq <- chisq.test(data)
chisq
fviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 50))
fviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 100))
fviz_ca_biplot(res.ca, repel = TRUE)
fviz_ca_biplot
?fviz_ca_biplot
fviz_ca_biplot(res.ca, label= "row")
fviz_ca_biplot(res.ca, label= "col")
fviz_ca_biplot(res.ca,repel= T, label= "col")
fish <- fisher.test(data)
fish
# install.packages(c("FactoMineR", "factoextra"))
library("FactoMineR")
library("factoextra")
filetable <- "/project/CRUP_scores/Scripts/CA_tables/tableCAfinal.txt"
data <- read.table(filetable,header= T, sep="\t", row.names= 1, nrows=100)
res.ca <- CA(data, graph = FALSE)
chisq <- chisq.test(data)
chisq
fish <- fisher.test(data, simulate.p.value= T)
fish
png("/home/lopez_s/Plots/CA_screeplot_all.png")
fviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 104))
dev.off()
png("/home/lopez_s/Plots/CA_biplot_all.png")
fviz_ca_biplot(res.ca, label= "col")
dev.off()
fish <- fisher.test(data, simulate.p.value= T)
fish
eig.val <- get_eigenvalue(res.ca)
eig.val
library(ggplot2)
data <- read.table("/project/CRUP_scores/Scripts/Placenta_cluster_ranking_enhancers.txt", header=T)
data<- na.omit(data)
print(nrow(data))
png("/home/lopez_s/Plots/Dist_genescores_placenta.png")
ggplot(data, aes(x=Gene_score)) +
geom_histogram(aes(y=..count..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_vline(aes(xintercept=mean(Gene_score, na.rm=T)),color="black", linetype="dashed", size=1)+labs(title="Distribution of gene scores placenta/chorion cluster", caption=paste("Number of enhancers: ", as.character(nrow(data))))+theme_minimal()
dev.off()
data2 <- read.table("/project/CRUP_scores/Scripts/Brain_cluster_ranking_enhancers.txt", header=T)
data2<- na.omit(data2)
print(nrow(data2))
png("/home/lopez_s/Plots/Dist_genescores_brain.png")
ggplot(data2, aes(x=Gene_score)) +
geom_histogram(aes(y=..count..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_vline(aes(xintercept=mean(Gene_score, na.rm=T)),color="black", linetype="dashed", size=1)+labs(title="Distribution of gene scores brain cluster", caption=paste("Number of enhancers: ", as.character(nrow(data2))))
dev.off()
brain <- read.table("/project/CRUP_scores/Scripts/Brain_cluster_ranking_enhancers.txt", header=T)
print(nrow(brain))
brain <- brain[brain$Gene_score > 3.0,]
brain <- na.omit(brain)
print(nrow(brain))
print(ncol(brain))
brain <- as.factor(brain$Gene_name)
write.table(brain, "/project/CRUP_scores/Scripts/TopBrain_cluster_ranking_enhancers.txt", row.names = F, quote= F, sep="\t")
placenta <- read.table("/project/CRUP_scores/Scripts/Placenta_cluster_ranking_enhancers.txt", header=T)
print(nrow(placenta))
placenta <- placenta[placenta$Gene_score >3.0,]
placenta <- na.omit(placenta)
placenta <- as.factor(placenta$Gene_name)
print(nrow(placenta))
write.table(placenta, "/project/CRUP_scores/Scripts/TopPlacenta_cluster_ranking_enhancers.txt", row.names= F, quote=F,sep="\t" )
brain <- read.table("/project/CRUP_scores/Scripts/Brain_cluster_ranking_enhancers.txt", header=T)
print(nrow(brain))
brain <- brain[brain$Gene_score > 3.0,]
brain <- na.omit(brain)
print(nrow(brain))
print(ncol(brain))
brain <- as.factor(brain$Gene_name)
write.table(brain, "/project/CRUP_scores/Scripts/TopBrain_cluster_ranking_enhancers.txt", row.names = F, quote= F, sep="\t")
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/Brain_cluster_ranking_enhancers.txt", header=T)
print(nrow(brain))
brain <- brain[brain$Gene_score > 3.0,]
brain <- na.omit(brain)
print(nrow(brain))
print(ncol(brain))
brain <- as.factor(brain$Gene_name)
write.table(brain, "/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/TopBrain_cluster_ranking_enhancers.txt", row.names = F, quote= F, sep="\t")
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/Brain_cluster_ranking_enhancers.txt", header=T)
print(nrow(brain))
brain <- brain[brain$Gene_score >= 4.0,]
brain <- na.omit(brain)
print(nrow(brain))
print(ncol(brain))
brain <- as.factor(brain$Gene_name)
write.table(brain, "/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/TopBrain_cluster_ranking_enhancers.txt", row.names = F, quote= F, sep="\t")
placenta <- read.table("/project/CRUP_scores/Scripts/Placenta_cluster_ranking_enhancers.txt", header=T)
print(nrow(placenta))
placenta <- placenta[placenta$Gene_score >= 4.0,]
placenta <- na.omit(placenta)
placenta <- as.factor(placenta$Gene_name)
print(nrow(placenta))
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/Brain_cluster_ranking_enhancers.txt", header=T)
print(nrow(brain))
brain <- brain[brain$Gene_score >= 4.0,]
brain <- na.omit(brain)
print(nrow(brain))
print(ncol(brain))
brain <- as.factor(brain$Gene_name)
placenta <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/Placenta_cluster_ranking_enhancers.txt", header=T)
print(nrow(placenta))
placenta <- placenta[placenta$Gene_score >= 4.0,]
placenta <- na.omit(placenta)
placenta <- as.factor(placenta$Gene_name)
print(nrow(placenta))
write.table(placenta, "/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/TopPlacenta_cluster_ranking_enhancers.txt", row.names= F, quote=F,sep="\t" )
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/Brain_cluster_ranking_enhancers.txt", header=T)
print(nrow(brain))
brain <- brain[brain$Gene_score >= 4.0,]
brain <- na.omit(brain)
print(nrow(brain))
print(ncol(brain))
brain <- as.factor(brain$Gene_name)
write.table(brain, "/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/TopBrain_cluster_ranking_enhancers.txt", row.names = F, quote= F, sep="\t")
##brain cluster
brain_SE <- ("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/", header=T, nrows=100)
##brain cluster
brain_SE <- ("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed", header=T, nrows=100)
##brain cluster
brain_SE <- ("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed", header=T, nrows=100)
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",nrows=100)
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",nrows=100, sep ="\t")
brain_SE[1,]
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",header=T,nrows=100, sep ="\t")
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/", header = F, sep ="\t")
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19.bed", header = F, sep ="\t")
brain[1,]
colnames(brain) <- c("chr", "start", "end")
library(GenomicRanges)
library(regioneR)
brain_SE <- toGRanges(brain_SE)
brain_SE <- toGRanges(brain)
colnames(brain_SE)
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",header=T,nrows=100, sep ="\t")
colnames(brain_SE)
brain_SE <- brain_SE[c(brain_SE$chr, brain_SE$start, brain_SE$end, brain_SE$closest.active.gene),]
brain_SE <- brain_SE[c(brain_SE$chr, brain_SE$start, brain_SE$end, brain_SE$closest.active.gene),]
dim(brain_SE)
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",header=T,nrows=100, sep ="\t")
brain_SE <- brain_SE[c(brain_SE$chr, brain_SE$start, brain_SE$end, brain_SE$closest.active.gene),]
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",header=T,nrows=100, sep ="\t")
brain_SE <- brain_SE[,c(brain_SE$chr, brain_SE$start, brain_SE$end, brain_SE$closest.active.gene)]
brain_SE <- brain_SE[,c(brain_SE$chr, brain_SE$start, brain_SE$end, brain_SE$closest.active.gene)]
brain_SE <- brain_SE[,c(3, 4, 5, 18)]
colnames(brain_SE)
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19.bed", header = F, sep ="\t")
colnames(brain) <- c("chr", "start", "end")
brain_rle <- toGRanges(brain)
brain_SE_rle <- toGRanges(brain_SE)
findOverlaps(brain_rle, brain_SE_rle, type="any")
findOverlaps(brain_rle, brain_SE_rle, type=c("start", "end"))
findOverlaps(brain_rle, brain_SE_rle, type="start")
findOverlaps(brain_SE_rle, brain_rle, type="start")
brain$chr
brain_SE$chr
brain_SE$start
?findOverlaps
findOverlaps(brain_SE_rle, brain_rle, type="start", minoverlap = 0L)
findOverlaps(brain_SE_rle, brain_rle, type="any", minoverlap = 0L)
##brain cluster
brain_SE <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/SE_package_brain.bed",header=T,sep ="\t", nrows=2000)
brain_SE <- brain_SE[,c(3, 4, 5, 18)]
brain <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19.bed", header = F, sep ="\t")
colnames(brain) <- c("chr", "start", "end")
brain_rle <- toGRanges(brain)
brain_SE_rle <- toGRanges(brain_SE)
findOverlaps(brain_rle,brain_SE_rle, type="any", minoverlap = 0L)
overlaps <- findOverlaps(brain_rle,brain_SE_rle, type="any", minoverlap = 0L)
?subsetByOverlaps
subjectHits(overlaps)
brain_SE[hits,]
hits <- subjectHits(overlaps)
brain_SE[hits,]
brain_genes <- brain_SE[hits,]$closest.active.gene
brain_genes
genesz <- as.data.frame(as.character(brain_genes))
genes <- as.data.frame(as.character(brain_genes))
genes
genes <- as.data.frame(as.character(brain_genes), colnames = "gene name")
genes
?as.data.frame
genes <- as.data.frame(as.character(brain_genes), colnames = c("gene name"))
genes
genes <- as.data.frame(as.character(brain_genes), col.names = c("gene name"))
genes
colnames(genes) <- "Gene_names"
###### Making plots of pathways ###
data <- read.table("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", header = T)
###### Making plots of pathways ###
data <- read.table("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", header = T, sep = "\t")
###### Making plots of pathways ###
data <- read.table("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", header = T)
###### Making plots of pathways ###
data <- read.csv("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", header = T)
###### Making plots of pathways ###
data <- read.csv("/home/lopez_s/Downloads/SEanalysis_brain.xlsx")
library(openxlsx)
data <- read.xlsv("/home/lopez_s/Downloads/SEanalysis_brain.xlsx")
data <- read.xlsx("/home/lopez_s/Downloads/SEanalysis_brain.xlsx")
View(brain)
data
data <- read.xlsx("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", colNames = T)
View(data)
data <- read.xlsx("/home/lopez_s/Downloads/SEanalysis_brain.xlsx")
data <- read.xlsx("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skipEmptyRows = F, skipEmptyCols = F)
data
data <- read.xlsx(xlsxFile, skipEmptyRows = F, skipEmptyCols = F)
xlsxFile <- system.file( "/home/lopez_s/Downloads/SEanalysis_brain.xlsx", package = "openxlsx")
data <- read.xlsx(xlsxFile, skipEmptyRows = F, skipEmptyCols = F)
xlsxFile <- system.file( "/home/lopez_s/Downloads/SEanalysis_brain.xlsx", package = "openxlsx")
library("readxl")
data <- read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx")
data
data <- read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=1)
data
data$Pathway
data$Pathway
View(data)
data$Pathway
data[,12]
data[1,12]
pathways <- as.vector(data[,12])
pathways
xlsxFile <- system.file( "/home/lopez_s/Downloads/SEanalysis_brain.xlsx", package = "openxlsx")
data <- read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=2)
data
data <- as.data.frame(read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=1))
data
View(data)
data$Pathway
data <- as.data.frame(read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=1))
data$Pathway
data <- as.data.frame(read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=2,  col_names = F))
data
View(data)
pathways <- as.vector(data[,12])
pathways
print(pathways)
data <- as.data.frame(read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=1,  col_names = F))
pathways <- as.vector(data[,12])
print(pathways)
data
View(data)
pathways <- as.vector(data[,12])
print(pathways)
pathways <- pathways[-1]
print(pathways)
library(stringr)
for (element in pathways){
print(str_split(element, ","))
}
pathways_formatted <- c()
for (element in pathways){
pathways_formatted <- c(pathways_formatted, str_split(element, ","))
}
pathways_formatted
path_unique <- unique(pathways_formatted)
View(path_unique)
source('/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/pathway_plots.R', echo=TRUE)
pathways_formatted_flat
path_unique <- unique(pathways_formatted_flat)
table(pathways_formatted_flat)
as.data.frame(table(pathways_formatted_flat))
pathway_data<- as.data.frame(table(pathways_formatted_flat))
library(ggplot2)
p1<- ggplot(data=pathway_data, aes(pathways_formatted_flat, Freq))+geom_col()
p1
p1+coord_flip()
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat, -Freq), Freq))+geom_col()
p1+coord_flip()
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat, Freq), Freq))+geom_col()
p1+coord_flip()
pathway_data <- pathway_data[order(pathway_data$Freq),]
pathway_data
?order
pathway_data <- pathway_data[order(pathway_data$Freq, decreasing = T),]
pathway_data
pathway_data[pathway_data$Freq > 4,]
dim(pathway_data[pathway_data$Freq > 4,])
p1<- ggplot(data=pathway_data, aes(pathways_formatted_flat, Freq))+geom_col()
p1<- ggplot(data=pathway_data, aes(pathways_formatted_flat, Freq))+geom_col()
p1+coord_flip()
pathway_data <- pathway_data[order(pathway_data$Freq, decreasing = T),]
p1<- ggplot(data=pathway_data, aes(pathways_formatted_flat, Freq))+geom_col()
p1+coord_flip()
pathway_data
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,Freq), Freq))+geom_col()
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_bar()
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()
p1
p1+coord_flip()
data <- pathway_data[pathway_data$Freq > 5,]
p1<- ggplot(data=data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()
p1+coord_flip()
p1
data <- pathway_data[pathway_data$Freq > 13,]
p1<- ggplot(data=data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_col()
p1
unique(pathway_data$Freq)
p1<- ggplot(data=data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_bar(stat= "identity")
p1
pathway_data<- as.data.frame(table(pathways_formatted_flat))
pathway_data <- pathway_data[order(pathway_data$Freq, decreasing = T),]
p1<- ggplot(data=data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_bar(stat= "identity")
p1
p1<- ggplot(data=data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_bar(stat= "count")
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_bar(stat= "identity")
p1
p1<- ggplot(data=pathway_data, aes(reorder(pathways_formatted_flat,-Freq), Freq))+geom_point()
p1
data <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19.bed")
data
data[1:500,]
write.table(data[1:500,],"/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19_top500.bed", quote=F)
write.table(data[1:500,],"/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19_top500.bed", quote=F, col.names = F, row.names=F)
write.table(data[1:500,],"/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_toenrich_hg19_top500.bed",sep="\t", quote=F, col.names = F, row.names=F)
data <- read.table("/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/placenta_toenrich_hg19.bed")
write.table(data[1:500,],"/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/placenta_toenrich_hg19_top500.bed",sep="\t", quote=F, col.names = F, row.names=F)
data <- as.data.frame(read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=1,  col_names = F))
pathways <- as.vector(data[,12])
data <- as.data.frame(read_excel("/home/lopez_s/Downloads/SEanalysis_brain.xlsx", skip=1,  col_names = F))
pathways <- as.vector(data[,12])
pathways <- pathways[-1]
print(pathways)
pathways_formatted <- c()
for (element in pathways){
pathways_formatted <- c(pathways_formatted, str_split(element, ","))
}
pathways_formatted_flat <- unlist(pathways_formatted, recursive = F)
pathway_data<- as.data.frame(table(pathways_formatted_flat))
pathway_data <- pathway_data[order(pathway_data$Freq, decreasing = T),]
pathway_data[1:10,]
write.table(pathway_data[1:10,], "/project/CRUP_scores/Scripts/Enhancer_enrichment_analysis/brain_top10enriched_SE.txt", sep="\t", quote=F, row.names = F)
